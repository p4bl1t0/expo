diff --git a/node_modules/react-native-reanimated/RNReanimated.podspec b/node_modules/react-native-reanimated/RNReanimated.podspec
index 1e78d4a..59427c5 100644
--- a/node_modules/react-native-reanimated/RNReanimated.podspec
+++ b/node_modules/react-native-reanimated/RNReanimated.podspec
@@ -39,6 +39,7 @@ Pod::Spec.new do |s|
     "USE_HEADERMAP" => "YES",
     "HEADER_SEARCH_PATHS" => "\"$(PODS_TARGET_SRCROOT)/ReactCommon\" \"$(PODS_TARGET_SRCROOT)\" \"$(PODS_ROOT)/#{folly_prefix}Folly\" \"$(PODS_ROOT)/boost\" \"$(PODS_ROOT)/boost-for-react-native\" \"$(PODS_ROOT)/DoubleConversion\" \"$(PODS_ROOT)/Headers/Private/React-Core\" ",
     "FRAMEWORK_SEARCH_PATHS" => "\"${PODS_CONFIGURATION_BUILD_DIR}/React-hermes\"",
+    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
   }
   s.compiler_flags = folly_compiler_flags + ' ' + boost_compiler_flags
   s.xcconfig               = {
diff --git a/node_modules/react-native-reanimated/android/CMakeLists.txt b/node_modules/react-native-reanimated/android/CMakeLists.txt
index 65c8c1d..0e580bf 100644
--- a/node_modules/react-native-reanimated/android/CMakeLists.txt
+++ b/node_modules/react-native-reanimated/android/CMakeLists.txt
@@ -82,6 +82,7 @@ target_include_directories(
         "${REACT_NATIVE_DIR}/React"
         "${REACT_NATIVE_DIR}/React/Base"
         "${REACT_NATIVE_DIR}/ReactAndroid/src/main/jni"
+        "${REACT_NATIVE_DIR}/ReactAndroid/src/main/jni/react/turbomodule"
         "${REACT_NATIVE_DIR}/ReactAndroid/src/main/java/com/facebook/react/turbomodule/core/jni"
         "${REACT_NATIVE_DIR}/ReactAndroid/src/main/java/com/facebook/react/fabric/jni"
         "${REACT_NATIVE_DIR}/ReactCommon"
@@ -234,6 +235,7 @@ target_link_libraries(
 )
 
 if(${JS_RUNTIME} STREQUAL "hermes")
+    find_package(hermes-engine REQUIRED CONFIG)
     string(APPEND CMAKE_CXX_FLAGS " -DJS_RUNTIME_HERMES=1")
     if(${REACT_NATIVE_MINOR_VERSION} LESS 69)
         # From `hermes-engine` npm package
@@ -253,7 +255,7 @@ if(${JS_RUNTIME} STREQUAL "hermes")
     endif()
     target_link_libraries(
             ${PACKAGE_NAME}
-            "${BUILD_DIR}/third-party-ndk/hermes/jni/${ANDROID_ABI}/libhermes.so"
+            hermes-engine::libhermes
     )
 elseif(${JS_RUNTIME} STREQUAL "v8")
     string(APPEND CMAKE_CXX_FLAGS " -DJS_RUNTIME_V8=1")
diff --git a/node_modules/react-native-reanimated/android/build.gradle b/node_modules/react-native-reanimated/android/build.gradle
index a38b2a5..b923fd1 100644
--- a/node_modules/react-native-reanimated/android/build.gradle
+++ b/node_modules/react-native-reanimated/android/build.gradle
@@ -197,7 +197,7 @@ def BOOST_VERSION = reactProperties.getProperty("BOOST_VERSION")
 def DOUBLE_CONVERSION_VERSION = reactProperties.getProperty("DOUBLE_CONVERSION_VERSION")
 def FOLLY_VERSION = reactProperties.getProperty("FOLLY_VERSION")
 def GLOG_VERSION = reactProperties.getProperty("GLOG_VERSION")
-def REACT_NATIVE_VERSION = reactProperties.getProperty("VERSION_NAME")
+def REACT_NATIVE_VERSION = System.getenv("REACT_NATIVE_OVERRIDE_VERSION") ?: reactProperties.getProperty("VERSION_NAME")
 def REACT_NATIVE_MINOR_VERSION = REACT_NATIVE_VERSION.split("\\.")[1].toInteger()
 def FBJNI_VERSION = "0.3.0"
 def REANIMATED_PACKAGE_BUILD = System.getenv("REANIMATED_PACKAGE_BUILD")
@@ -229,6 +229,9 @@ def JS_RUNTIME = {
         return "v8"
     }
     def appProject = findProject(":app") ? project(":app") : null
+    if (appProject?.hermesEnabled) {
+        return "hermes"
+    }
     return appProject?.ext?.react?.enableHermes ? "hermes" : defaultRuntimeType
 }.call()
 
@@ -270,10 +273,10 @@ def detectAAR(Integer rnMinorVersion, String engine) { // Reanimated2 only
             println "\n\n\n"
             println "****************************************************************************************"
             println "\n\n\n"
-            println "WARNING reanimated - no version-specific reanimated AAR for react-native version $minor found."
+            println "WARNING reanimated - no version-specific reanimated AAR for react-native version $rnMinorVersion found."
             println "Falling back to AAR for react-native version $rnMinorVersionCopy."
             println "The react-native JSI interface is not ABI-safe yet, this may result in crashes."
-            println "Please post a pull request to implement support for react-native version $minor to the reanimated repo."
+            println "Please post a pull request to implement support for react-native version $rnMinorVersion to the reanimated repo."
             println "Thanks!"
             println "\n\n\n"
             println "****************************************************************************************"
@@ -335,8 +338,8 @@ def getTaskByPath(
     return project.getTasks().findByPath(pathName)
 }
 
-def aar = detectAAR(REACT_NATIVE_MINOR_VERSION, JS_RUNTIME)
-boolean BUILD_FROM_SOURCE = shouldBuildFromSource(aar, JS_RUNTIME)
+def aar
+boolean BUILD_FROM_SOURCE = true
 
 if (!BUILD_FROM_SOURCE && !isNewArchitectureEnabled()) { // Reanimated2 only
     if (REACT_NATIVE_MINOR_VERSION < 65) {
@@ -807,6 +810,7 @@ if (REACT_NATIVE_MINOR_VERSION >= 69 && !isNewArchitectureEnabled()) {
 }
 
 task prepareHermes() {
+    return
     if (REACT_NATIVE_MINOR_VERSION >= 69) {
         if (!isNewArchitectureEnabled()) {
             dependsOn(unzipHermes)
@@ -942,7 +946,7 @@ dependencies {
         implementation "com.facebook.fbjni:fbjni:" + FBJNI_VERSION
     }
     else {
-        implementation "com.facebook.fbjni:fbjni-java-only:" + FBJNI_VERSION
+        compileOnly "com.facebook.fbjni:fbjni:" + FBJNI_VERSION
     }
     implementation "com.facebook.react:react-native:+" // From node_modules
     implementation "androidx.transition:transition:1.1.0"
@@ -955,20 +959,40 @@ dependencies {
     extractSO(files(jscAAR))
 }
 
+def reactNativeIsNightly = reactProperties.getProperty("VERSION_NAME").startsWith("0.0.0-")
+
+task downloadReactNativeNightlyAAR(type: Download) {
+  def classifier = resolveBuildType() == 'Debug' ? 'debug' : 'release'
+  def downloadFile = file("${downloadsDir}/react-native-nightly.aar")
+  def version = reactProperties.getProperty("VERSION_NAME")
+  src("https://oss.sonatype.org/service/local/artifact/maven/redirect?r=snapshots&g=com.facebook.react&a=react-android&c=${classifier}&e=aar&v=${version}-SNAPSHOT")
+  onlyIfNewer(true)
+  overwrite(false)
+  dest(downloadFile)
+}
+
 task unpackReactNativeAAR {
-    def buildType = resolveBuildType()
-    def rnAarMatcher = "**/react-native/**/*${buildType}.aar"
+  def buildType = resolveBuildType()
+  def rnAAR
+  if (reactNativeIsNightly) {
+    dependsOn(downloadReactNativeNightlyAAR)
+    rnAAR = downloadReactNativeNightlyAAR.dest
+  } else {
+    def rnAarMatcher = "**/react-native/**/*\${buildType}.aar"
     if (REACT_NATIVE_MINOR_VERSION < 69) {
-        rnAarMatcher = "**/**/*.aar"
+      rnAarMatcher = "**/**/*.aar"
     }
-    def rnAAR = fileTree("$reactNativeRootDir/android").matching({ it.include rnAarMatcher }).singleFile
-    def file = rnAAR.absoluteFile
-    def packageName = file.name.tokenize('-')[0]
+    rnAAR = fileTree("$reactNativeRootDir/android").matching({ it.include rnAarMatcher }).singleFile
+  }
+  def file = rnAAR.absoluteFile
+  def packageName = file.name.tokenize('-')[0]
+  doLast {
     copy {
-        from zipTree(file)
-        into "$reactNativeRootDir/ReactAndroid/src/main/jni/first-party/$packageName/"
-        include "jni/**/*.so"
+     from zipTree(file)
+      into "$reactNativeRootDir/ReactAndroid/src/main/jni/first-party/$packageName/"
+      include "jni/**/*.so"
     }
+  }
 }
 
 task downloadNdkBuildDependencies {
diff --git a/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java b/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
index 68b643e..b8fc3af 100644
--- a/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
+++ b/node_modules/react-native-reanimated/android/src/main/java/com/swmansion/reanimated/layoutReanimation/ReanimatedUIManager.java
@@ -12,21 +12,7 @@ import com.facebook.react.module.annotations.ReactModule;
 import com.facebook.react.uimanager.events.EventDispatcher;
 import java.util.List;
 
-class ReaUiImplementationProvider extends UIImplementationProvider {
 
-  @Override
-  UIImplementation createUIImplementation(
-      ReactApplicationContext reactContext,
-      ViewManagerRegistry viewManagerRegistry,
-      EventDispatcher eventDispatcher,
-      int minTimeLeftInFrameForNonBatchedOperationMs) {
-    return new com.facebook.react.uimanager.ReanimatedUIImplementation(
-        reactContext,
-        viewManagerRegistry,
-        eventDispatcher,
-        minTimeLeftInFrameForNonBatchedOperationMs);
-  }
-}
 
 @ReactModule(name = UIManagerModule.NAME)
 public class ReanimatedUIManager extends UIManagerModule {
@@ -38,7 +24,7 @@ public class ReanimatedUIManager extends UIManagerModule {
     super(
         reactContext,
         viewManagersList,
-        new ReaUiImplementationProvider(),
+        
         minTimeLeftInFrameForNonBatchedOperationMs);
   }
 
diff --git a/node_modules/react-native-reanimated/ios/native/NativeProxy.mm b/node_modules/react-native-reanimated/ios/native/NativeProxy.mm
index 681d21a..0b4dc81 100644
--- a/node_modules/react-native-reanimated/ios/native/NativeProxy.mm
+++ b/node_modules/react-native-reanimated/ios/native/NativeProxy.mm
@@ -22,6 +22,8 @@
 #import <reacthermes/HermesExecutorFactory.h>
 #elif __has_include(<hermes/hermes.h>)
 #import <hermes/hermes.h>
+#elif __has_include(<React-jsc/JSCRuntime.h>)
+#import <React-jsc/JSCRuntime.h>
 #else
 #import <jsi/JSCRuntime.h>
 #endif
diff --git a/node_modules/react-native-reanimated/scripts/reanimated_utils.rb b/node_modules/react-native-reanimated/scripts/reanimated_utils.rb
index 481cb3a..cd59618 100644
--- a/node_modules/react-native-reanimated/scripts/reanimated_utils.rb
+++ b/node_modules/react-native-reanimated/scripts/reanimated_utils.rb
@@ -32,8 +32,8 @@ def find_config()
 
   result[:is_reanimated_example_app] = ENV["REANIMATED_EXAMPLE_APP_NAME"] != nil
   result[:is_tvos_target] = react_native_json['name'] == 'react-native-tvos'
-  result[:react_native_version] = react_native_json['version']
-  result[:react_native_minor_version] = react_native_json['version'].split('.')[1].to_i
+  result[:react_native_version] = ENV["REACT_NATIVE_OVERRIDE_VERSION"] ? ENV["REACT_NATIVE_OVERRIDE_VERSION"] : react_native_json['version']
+  result[:react_native_minor_version] = result[:react_native_version].split('.')[1].to_i
   result[:react_native_node_modules_dir] = File.expand_path(react_native_node_modules_dir)
   result[:reanimated_node_modules_dir] = File.expand_path(File.join(__dir__, '..', '..'))
 
