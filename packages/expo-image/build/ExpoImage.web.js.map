{"version":3,"file":"ExpoImage.web.js","sourceRoot":"","sources":["../src/ExpoImage.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport {\n  ImageContentPosition,\n  ImageContentPositionObject,\n  ImageProps,\n  ImageSource,\n  ImageTransition,\n  ImageTransitionEffect,\n  ImageTransitionTiming,\n  ImageUriSource,\n  PositionValue,\n  RequireSource,\n} from './Image.types';\nimport { resolveContentFit, resolveContentPosition } from './utils';\n\nconst resolveAssetSource = (source?: ImageUriSource | RequireSource | null) => {\n  if (source == null) return null;\n\n  if (typeof source === 'string') {\n    return { uri: source };\n  }\n  if (typeof source === 'number') {\n    return { uri: String(source) };\n  }\n\n  return source;\n}\n\nconst ensureUnit = (value: string | number) => {\n  const trimmedValue = String(value).trim();\n  if (trimmedValue.endsWith('%')) {\n    return trimmedValue;\n  }\n  return `${trimmedValue}px`;\n};\n\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\n\nfunction getObjectPositionFromContentPosition(contentPosition?: ImageContentPosition) {\n  const resolvedPosition = (\n    typeof contentPosition === 'string' ? resolveContentPosition(contentPosition) : contentPosition\n  ) as Record<KeysOfUnion<ImageContentPositionObject>, PositionValue>;\n\n  if (!resolvedPosition) {\n    return null;\n  }\n  if (resolvedPosition.top == null || resolvedPosition.bottom == null) {\n    resolvedPosition.top = '50%';\n  }\n  if (resolvedPosition.left == null || resolvedPosition.right == null) {\n    resolvedPosition.left = '50%';\n  }\n\n  return ['top', 'bottom', 'left', 'right']\n    .map((key) => {\n      if (key in resolvedPosition) {\n        return `${key} ${ensureUnit(resolvedPosition[key])}`;\n      }\n      return '';\n    })\n    .join(' ');\n}\n\nconst ensureIsArray = (source?: ImageSource): (ImageUriSource | RequireSource)[] => {\n  if (Array.isArray(source)) {\n    return source;\n  }\n  if (source == null) {\n    return [];\n  }\n  return [source];\n};\n\ntype ImageState = 'empty' | 'loading' | 'loaded' | 'error';\nconst useImageState = (source: ImageSource | undefined) => {\n  const [imageState, setImageState] = React.useState<ImageState>(source ? 'loading' : 'empty');\n  React.useEffect(() => {\n    setImageState((prevState) =>\n      prevState === 'empty' ? (source ? 'loading' : 'empty') : prevState\n    );\n  }, [source]);\n\n  const onLoad = React.useCallback(\n    () => setImageState((prevState) => (imageState === 'loading' ? 'loaded' : prevState)),\n    []\n  );\n  const handlers = React.useMemo(\n    () => ({\n      onLoad,\n    }),\n    [onLoad]\n  );\n  return [imageState, handlers] as [ImageState, { onLoad: () => void }];\n};\n\nconst getCSSTiming = (timing?: ImageTransitionTiming) => {\n  return {\n    [ImageTransitionTiming.EASE_IN]: 'ease-in',\n    [ImageTransitionTiming.EASE_OUT]: 'ease-out',\n    [ImageTransitionTiming.EASE_IN_OUT]: 'ease-in-out',\n    [ImageTransitionTiming.LINEAR]: 'linear',\n  }[timing || ImageTransitionTiming.LINEAR];\n};\n\nconst useTransition = (\n  transition: ImageTransition | null | undefined,\n  state: ImageState\n): Record<'placeholder' | 'image', Partial<React.CSSProperties>> => {\n  if (!transition?.effect) return { placeholder: {}, image: {} };\n  const { duration, timing, effect } = {\n    timing: ImageTransitionTiming.EASE_IN_OUT,\n    duration: 1000,\n    ...transition,\n  };\n  if (effect === ImageTransitionEffect.CROSS_DISOLVE) {\n    const commonStyles = {\n      transition: `opacity ${duration}ms`,\n      transitionTimingFunction: getCSSTiming(timing),\n    };\n    return {\n      image: {\n        opacity: state === 'loaded' ? '1' : '0',\n        ...commonStyles,\n      },\n      placeholder: {\n        opacity: state === 'loaded' ? '0' : '1',\n        ...commonStyles,\n      },\n    };\n  } else if (effect === ImageTransitionEffect.FLIP_FROM_TOP) {\n    const commonStyles = {\n      transition: `transform ${duration}ms`,\n      transformOrigin: 'top',\n      transitionTimingFunction: getCSSTiming(timing),\n    };\n    return {\n      placeholder: {\n        transform: `rotateX(${state !== 'loaded' ? '0' : '90deg'})`,\n        ...commonStyles,\n      },\n      image: {\n        transform: `rotateX(${state === 'loaded' ? '0' : '90deg'})`,\n        ...commonStyles,\n      },\n    };\n  }\n\n  return { placeholder: {}, image: {} };\n};\n\nexport default function ExpoImage({\n  source,\n  placeholder,\n  loadingIndicatorSource,\n  contentPosition,\n  onLoad,\n  transition,\n  onLoadStart,\n  onLoadEnd,\n  onError,\n  ...props\n}: ImageProps) {\n  const { aspectRatio, backgroundColor, transform, borderColor, ...style } = props.style ?? {};\n  const [state, handlers] = useImageState(source);\n  const { placeholder: placeholderStyle, image: imageStyle } = useTransition(transition, state);\n\n  const resolvedSources = ensureIsArray(source).map(resolveAssetSource);\n\n  return (\n    <div\n      style={{\n        aspectRatio: String(aspectRatio),\n        backgroundColor: backgroundColor?.toString(),\n        transform: transform?.toString(),\n        borderColor: borderColor?.toString(),\n        ...style,\n        overflow: 'hidden',\n        position: 'relative',\n      }}>\n      <img\n        src={resolveAssetSource(placeholder)?.uri}\n        style={{\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          objectFit: 'scale-down',\n          objectPosition: 'center',\n          ...placeholderStyle,\n        }}\n      />\n      <img\n        src={resolvedSources.at(0)?.uri}\n        style={{\n          width: '100%',\n          height: '100%',\n          position: 'absolute',\n          left: 0,\n          right: 0,\n          objectFit: resolveContentFit(props.contentFit, props.resizeMode),\n          objectPosition: getObjectPositionFromContentPosition(contentPosition) || undefined,\n          ...imageStyle,\n        }}\n        onLoad={handlers.onLoad}\n      />\n    </div>\n  );\n}\n"]}